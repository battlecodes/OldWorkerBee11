<UserControl x:Class="LadyBugUI.Controls.Button"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:LadyBugUI.Controls"
             mc:Ignorable="d">
    <UserControl.Resources>
        <ResourceDictionary Source="/LadyBugUI;component/Resources/LadyBugUI.xaml"/>
    </UserControl.Resources>

    <Grid>
        <Button
            Height="{Binding ButtonHeight, RelativeSource={RelativeSource FindAncestor, AncestorType=UserControl}}"
            Width="{Binding ButtonWidth, RelativeSource={RelativeSource FindAncestor, AncestorType=UserControl}}"
            Background="{Binding ButtonBackground, RelativeSource={RelativeSource FindAncestor, AncestorType=UserControl}}"
            BorderBrush="{Binding ButtonBorderBrush, RelativeSource={RelativeSource FindAncestor, AncestorType=UserControl}}"
            BorderThickness="{Binding ButtonBorderThickness, RelativeSource={RelativeSource FindAncestor, AncestorType=UserControl}}">
            <Button.Style>
                <Style TargetType="Button"
                       BasedOn="{StaticResource DefaultButtonStyle}">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="Button">
                                <Border
                                    x:Name="ButtonBorder"
                                    Height="{TemplateBinding Height}"
                                    Width="{TemplateBinding Width}"
                                    MinHeight="{TemplateBinding MinHeight}"
                                    MinWidth="{TemplateBinding MinWidth}"
                                    Padding="{TemplateBinding Padding}"
                                    HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="{TemplateBinding Border.CornerRadius}">
                                    <ContentPresenter
                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                </Border>

                                <ControlTemplate.Triggers>
                                    <!-- Mouse over case -->
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter TargetName="ButtonBorder" Property="Background" Value="{Binding MouseOverButtonBackground, RelativeSource={RelativeSource FindAncestor, AncestorType=UserControl}}"/>
                                        <Setter TargetName="ButtonBorder" Property="BorderBrush" Value="{Binding MouseOverButtonBorderBrush, RelativeSource={RelativeSource FindAncestor, AncestorType=UserControl}}"/>
                                    </Trigger>
                                    
                                    <!-- Disabled case -->
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter TargetName="ButtonBorder" Property="Background" Value="{StaticResource DisabledButtonBackground}"/>
                                        <Setter TargetName="ButtonBorder" Property="BorderBrush" Value="{StaticResource DisabledButtonBorderBrush}"/>
                                    </Trigger>
                                    
                                    <!-- Pressed case -->
                                    <Trigger Property="IsPressed" Value="True">
                                        <Setter TargetName="ButtonBorder" Property="Background" Value="{Binding PressedButtonBackground, RelativeSource={RelativeSource FindAncestor, AncestorType=UserControl}}"/>
                                        <Setter TargetName="ButtonBorder" Property="BorderBrush" Value="{StaticResource PressedButtonBorderBrush}"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Button.Style>


            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                
            <!-- #Image -->
                <Image
                Grid.Column="0"
                Source="{Binding ImageSource, RelativeSource={RelativeSource FindAncestor, AncestorType=UserControl}}"
                Visibility="{Binding ImageSource, RelativeSource={RelativeSource FindAncestor, AncestorType=UserControl}, Converter={StaticResource NullToVis}}">
                    <Image.Style>
                        <Style TargetType="Image"
                               BasedOn="{StaticResource DefaultButtonImageStyle}"/>
                    </Image.Style>
                </Image>

                <Label
                    Grid.Column="1"
                    Content="Test button"
                    FontSize="14"
                    FontWeight="Normal">
                    <Label.Style>
                        <Style TargetType="Label"
                               BasedOn="{StaticResource DefaultButtonLabelStyle}">
                            <Setter Property="Foreground" Value="{Binding ButtonForeground, RelativeSource={RelativeSource FindAncestor, AncestorType=UserControl}}"/>

                            <Style.Triggers>
                                <!-- Mouse over case -->
                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=IsMouseOver}" Value="True">
                                    <Setter Property="Foreground" Value="{Binding MouseOverButtonForeground, RelativeSource={RelativeSource FindAncestor, AncestorType=UserControl}}"/>
                                </DataTrigger>
                                
                                <!-- Disabled case -->
                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=IsEnabled}" Value="False">
                                    <Setter Property="Foreground" Value="{StaticResource DisabledButtonForeground}"/>
                                </DataTrigger>
                                
                                <!-- Pressed case -->
                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=IsPressed}" Value="True">
                                    <Setter Property="Foreground" Value="{Binding PressedButtonForeground, RelativeSource={RelativeSource FindAncestor, AncestorType=UserControl}}"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Label.Style>
                </Label>
            
            </Grid>

        </Button>
    </Grid>
    
</UserControl>
